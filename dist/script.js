(()=>{"use strict";var e,t=new Uint8Array(16);function n(){if(!e&&!(e="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return e(t)}const r=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,o=function(e){return"string"==typeof e&&r.test(e)};for(var u=[],a=0;a<256;++a)u.push((a+256).toString(16).substr(1));const c=function(e,t,r){var a=(e=e||{}).random||(e.rng||n)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,t){r=r||0;for(var c=0;c<16;++c)t[r+c]=a[c];return t}return function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=(u[e[t+0]]+u[e[t+1]]+u[e[t+2]]+u[e[t+3]]+"-"+u[e[t+4]]+u[e[t+5]]+"-"+u[e[t+6]]+u[e[t+7]]+"-"+u[e[t+8]]+u[e[t+9]]+"-"+u[e[t+10]]+u[e[t+11]]+u[e[t+12]]+u[e[t+13]]+u[e[t+14]]+u[e[t+15]]).toLowerCase();if(!o(n))throw TypeError("Stringified UUID is invalid");return n}(a)},i=document.querySelector("#list"),l=document.querySelector("#new-task-form"),d=document.querySelector("#new-task-title"),s=function(){const e=localStorage.getItem("TASKS");return null==e?[]:JSON.parse(e)}();function p(e){const t=document.createElement("li"),n=document.createElement("label"),r=document.createElement("input");r.addEventListener("change",(()=>{e.completed=r.checked,f()})),r.type="checkbox",r.checked=e.completed,n.append(r,e.title),t.append(n),null==i||i.append(t)}function f(){localStorage.setItem("TASKS",JSON.stringify(s))}s.forEach(p),null==l||l.addEventListener("submit",(e=>{if(e.preventDefault(),""==(null==d?void 0:d.value)||null==(null==d?void 0:d.value))return;const t={id:c(),title:d.value,completed:!1,createdAt:new Date};s.push(t),f(),p(t),d.value=""}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,